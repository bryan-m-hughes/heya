/*
The MIT License (MIT)

Copyright (c) 2015 Bryan Hughes <bryan@theoreticalideations.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

"use strict";

var EventEmitter = require("events").EventEmitter;
var util = require("util");

module.exports = DigitalJoystick;

function DigitalJoystick(options) {
  this._options = options || {};
}
util.inherits(DigitalJoystick, EventEmitter);

DigitalJoystick.prototype.connect = function connect(cb) {
  var five = require("johnny-five");
  var board = new five.Board({
    io: this._options.io,
    repl: false,
    id: "digital_joystick"
  });

  board.on("ready", (function () {
    var state = {
      up: false,
      right: false,
      down: false,
      left: false
    };

    var process = (function process() {
      var key = 0;
      if (state.up) {
        key += 1;
      }
      if (state.right) {
        key += 2;
      }
      if (state.down) {
        key += 4;
      }
      if (state.left) {
        key += 8;
      }
      var direction;
      switch (key) {
        case 0:
          direction = {
            x: 0,
            y: 0
          };
          break;
        case 1:
          direction = {
            x: 0,
            y: 1
          };
          break;
        case 3:
          direction = {
            x: 0.707,
            y: 0.707
          };
          break;
        case 2:
          direction = {
            x: 1,
            y: 0
          };
          break;
        case 6:
          direction = {
            x: 0.707,
            y: -0.707
          };
          break;
        case 4:
          direction = {
            x: 0,
            y: -1
          };
          break;
        case 12:
          direction = {
            x: -0.707,
            y: -0.707
          };
          break;
        case 8:
          direction = {
            x: -1,
            y: 0
          };
          break;
        case 9:
          direction = {
            x: -0.707,
            y: 0.707
          };
          break;
      }
      if (direction) {
        this.emit("move", direction);
      }
    }).bind(this);

    function initPin(pin, name) {
      var button = new five.Button({
        pin: pin,
        id: "digital_joystick"
      });
      button.on("press", function () {
        state[name] = true;
        process();
      });
      button.on("release", function () {
        state[name] = false;
        process();
      });
    }

    initPin(this._options.left, "left");
    initPin(this._options.right, "right");
    initPin(this._options.up, "up");
    initPin(this._options.down, "down");

    cb();
  }).bind(this));
};
//# sourceMappingURL=data:application/json;base64,